// G√©n√©rateur PDF pour les Conventions de Formation
// Document contractuel formel
(function() {
    'use strict';

    // R√©cup√©rer les utilitaires depuis window.pdfCore
    const { hexToRgb, addImageToPdf } = window.pdfCore;

async function generateConventionPDF(conventionData, layoutParams = {}) {
    console.log('üîß [DEBUG] generateConventionPDF appel√©e');
    console.log('üìÑ [DEBUG] Donn√©es convention:', conventionData);
    console.log('‚öôÔ∏è [DEBUG] Param√®tres layout:', layoutParams);

    // V√©rifier que jsPDF est disponible
    let jsPDF;
    if (window.jsPDF) {
        jsPDF = window.jsPDF;
    } else if (window.jspdf && window.jspdf.jsPDF) {
        jsPDF = window.jspdf.jsPDF;
    } else {
        throw new Error('jsPDF n\'est pas charg√©');
    }

    // Param√®tres par d√©faut pour convention
    const defaultParams = {
        primaryColor: [19, 62, 94],
        grayColor: [55, 65, 81],
        lightGrayColor: [107, 114, 128],
        titleSize: 11,        // ~15px r√©els (11pt ‚âà 15px)
        subtitleSize: 8,      // ~10px r√©els (8pt ‚âà 10px)
        textSize: 6,          // ~8px r√©els (6pt ‚âà 8px)
        headerSize: 14,
        footerSize: 8,
        articleSize: 7,       // ~9px r√©els (7pt ‚âà 9px)
        companyName: 'ARKANCE',
        footerAddress: 'LE VAL SAINT QUENTIN - B√¢timent C - 2, rue Ren√© Caudron - CS 30764 - 78961 Voisins-le-Bretonneux Cedex',
        footerContact: 'www.arkance-systems.fr - formation@arkance-systems.com - T√©l. : 01 39 44 18 18',
        headerLogoLeft: null,
        footerLogoLeft: null
    };

    const params = { ...defaultParams, ...layoutParams };

    // Cr√©er le document PDF A4
    const doc = new jsPDF({
        orientation: 'portrait',
        unit: 'mm',
        format: 'a4'
    });

    const pageWidth = doc.internal.pageSize.getWidth();
    const pageHeight = doc.internal.pageSize.getHeight();

    // Couleurs
    const primaryColor = hexToRgb(params.primaryColor) || params.primaryColor;
    const grayColor = hexToRgb(params.grayColor) || params.grayColor;

    // Header avec logo
    await addImageToPdf(doc, params.headerLogoLeft, 0, 0, pageWidth, 22, params.companyName);

    // Titre principal
    let yPos = 35;
    doc.setFontSize(params.titleSize);
    doc.setFont('helvetica', 'bold');
    doc.setTextColor(primaryColor[0], primaryColor[1], primaryColor[2]);
    doc.text('CONVENTION DE', 20, yPos);
    yPos += 7;
    doc.text('FORMATION PROFESSIONNELLE', 20, yPos);

    // Num√©ro de convention
    yPos += 10;
    doc.setFontSize(params.subtitleSize);
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(grayColor[0], grayColor[1], grayColor[2]);
    doc.text(`${conventionData.numero || '202701 - PR-1234'}`, 20, yPos);

    // Parties contractantes
    yPos += 15;
    doc.setFontSize(params.textSize);
    doc.setFont('helvetica', 'bold');
    doc.text('ENTRE LES SOUSSIGN√âS :', 20, yPos);

    yPos += 8;

    // Sauvegarder position Y de d√©part pour les 2 colonnes
    const startY = yPos;

    // === COLONNE GAUCHE - PARTIE ARKANCE (statique) ===
    let leftY = startY;
    const leftX = 20; // Position X colonne gauche

    doc.setFont('helvetica', 'normal');
    doc.setFontSize(params.textSize);
    doc.text('D\'une part, la soci√©t√© :', leftX, leftY);
    leftY += 4;

    doc.setFont('helvetica', 'bold');
    doc.text('ARKANCE', leftX, leftY);
    leftY += 4;

    doc.setFont('helvetica', 'normal');
    doc.text('VAL SAINT QUENTIN', leftX, leftY);
    leftY += 4;
    doc.text('2 Rue Ren√© Caudron', leftX, leftY);
    leftY += 4;
    doc.text('B√¢timent C', leftX, leftY);
    leftY += 4;
    doc.text('78960 Voisins-le-Bretonneux', leftX, leftY);
    leftY += 4;

    // === COLONNE DROITE - PARTIE CLIENT (dynamique) ===
    let rightY = startY;
    const rightX = 110; // Position X colonne droite

    doc.setFont('helvetica', 'normal');
    doc.text('Et d\'autre part, la soci√©t√© :', rightX, rightY);
    rightY += 4;

    // Nom soci√©t√© client en gras
    doc.setFont('helvetica', 'bold');
    doc.text(conventionData.societe || 'SOCIETE CLIENT', rightX, rightY);
    rightY += 4;

    // Adresse client (peut √™tre multi-lignes)
    doc.setFont('helvetica', 'normal');
    const adresseClient = conventionData.adresse || 'Adresse du client';
    const adresseLines = doc.splitTextToSize(adresseClient, pageWidth - rightX - 20);
    adresseLines.forEach(line => {
        doc.text(line, rightX, rightY);
        rightY += 4;
    });

    doc.text(`repr√©sent√© par : ${conventionData.representant || 'Repr√©sentant l√©gal'}`, rightX, rightY);
    rightY += 4;

    // === AVANCER Y POSITION BAS√âE SUR LA HAUTEUR MAXIMALE ===
    yPos = Math.max(leftY, rightY) + 8;

    // === TEXTE FINAL ===
    doc.setFont('helvetica', 'bold');
    doc.text('IL A √âT√â CONVENU ET ARR√äT√â CE QUI SUIT :', 20, yPos);

    // Fonction utilitaire pour rendre du texte mixte (normal/gras)
    const renderMixedText = (segments, startX, startY, maxWidth) => {
        let currentX = startX;
        let currentY = startY;
        const lineHeight = 4;

        segments.forEach(segment => {
            // D√©finir le style de police
            doc.setFont('helvetica', segment.style || 'normal');

            // Calculer la largeur du texte
            const textWidth = doc.getTextWidth(segment.text);

            // V√©rifier si le texte d√©passe la largeur maximale
            if (currentX + textWidth > startX + maxWidth && currentX > startX) {
                // Aller √† la ligne suivante
                currentY += lineHeight;
                currentX = startX;
            }

            // Rendre le texte
            doc.text(segment.text, currentX, currentY);
            currentX += textWidth;

            // Forcer un retour √† la ligne si demand√©
            if (segment.breakAfter) {
                currentY += lineHeight;
                currentX = startX;
            }
        });

        // Retourner la position Y finale
        return currentY + lineHeight;
    };

    // Articles de la convention
    yPos += 5;

    // Donn√©es dynamiques pour les articles
    const listeStagiaires = conventionData.stagiaires || 'Liste des stagiaires √† d√©finir';
    const datesSessions = conventionData.dates || 'Dates de formation √† d√©finir';

    // LOGS DE D√âBOGAGE - V√©rifier les donn√©es re√ßues
    console.log('üîç [PDF DEBUG] conventionData re√ßu:', conventionData);
    console.log('üîç [PDF DEBUG] lieu_formation:', conventionData.lieu_formation);
    console.log('üîç [PDF DEBUG] lieu_type:', conventionData.lieu_type);

    // CORRECTION Article 4: Utiliser l'adresse exacte des sessions format√©e par session
    const lieuFormation = conventionData.lieu_formation ?
        conventionData.lieu_formation : // D√©j√† format√© comme "Session 1: lieu1, Session 2: lieu2"
        (conventionData.lieu_type === 'distance' ? '√† distance' : '√† l\'adresse √† d√©finir');

    console.log('üîç [PDF DEBUG] lieuFormation final:', lieuFormation);

    const programmeFormate = `Formation ${conventionData.editeur || 'Autodesk'} ${conventionData.logiciel || conventionData.formation || 'Logiciel'} 2025 - ${conventionData.type_pdc || 'Concepts de base'}`;

    const articles = [
        {
            titre: 'Article I',
            segments: [
                { text: `La formation professionnelle faisant l'objet de la pr√©sente convention sera suivie par le personnel de la Soci√©t√© ${conventionData.societe || 'SOCIETE CLIENT'} suivant : `, style: 'normal' },
                { text: listeStagiaires, style: 'bold' }
            ]
        },
        {
            titre: 'Article II',
            contenu: `La dur√©e de ce contrat sera de ${conventionData.duree || '5 jour(s)'} r√©parti(s) comme suit : ${datesSessions}`
        },
        {
            titre: 'Article III',
            segments: [
                { text: 'La formation sera assur√©e par le(s) formateur(s) d√©sign√©(s) ci-dessous : ', style: 'normal' },
                { text: conventionData.formateur || 'Formateur ARKANCE', style: 'bold' }
            ]
        },
        {
            titre: 'Article IV',
            segments: [
                { text: `Le programme de la formation est le suivant : ¬´ ${programmeFormate} ¬ª`, style: 'normal', breakAfter: true },
                { text: 'La formation se d√©roulera ', style: 'normal' },
                { text: lieuFormation, style: 'bold' }
            ]
        },
        {
            titre: 'Article V',
            contenu: 'Les horaires de formation seront les suivants : 09h00 √† 12h00 et de 13h00 √† 17h00'
        },
        {
            titre: 'Article VI',
            contenu: 'Au terme de la formation susmentionn√©e, le centre de formation d√©livrera un certificat de fin de stage √† chaque participant.'
        },
        {
            titre: 'Article VII',
            contenu: `En contrepartie de la formation dispens√©e, la soci√©t√© ${conventionData.societe || 'SOCIETE CLIENT'} ${conventionData.adresse || 'Adresse non renseign√©e'}\ns'engage √† acquitter au centre de formation signataire de la pr√©sente convention, le co√ªt de cette formation fix√© √† :`
        }
    ];

    articles.forEach(article => {
        // Rendre le titre de l'article
        doc.setFont('helvetica', 'bold');
        doc.setFontSize(params.articleSize);
        doc.text(article.titre, 20, yPos);
        yPos += 3;

        // Rendre le contenu selon le type (segments ou contenu uniforme)
        doc.setFontSize(params.textSize);

        if (article.segments) {
            // Rendu avec texte mixte (normal/gras)
            yPos = renderMixedText(article.segments, 20, yPos, pageWidth - 40);
            yPos += 2; // Espacement apr√®s l'article
        } else {
            // Rendu uniforme (texte normal)
            doc.setFont('helvetica', 'normal');
            const lines = doc.splitTextToSize(article.contenu, pageWidth - 40);
            lines.forEach(line => {
                doc.text(line, 20, yPos);
                yPos += 4;
            });
            yPos += 6;
        }
    });

    // Tarifs
    yPos += 10;
    doc.setFont('helvetica', 'bold');
    doc.text('CO√õT DE LA FORMATION :', 20, yPos);
    yPos += 8;

    doc.setFont('helvetica', 'normal');
    const tarifLines = [
        `Formation ${conventionData.formation || 'Formation'} : ${conventionData.cout || '0,00'} ‚Ç¨`,
        `TVA 20% : ${conventionData.tva || '0,00'} ‚Ç¨`,
        `TOTAL TTC : ${conventionData.total || '0,00'} ‚Ç¨`
    ];

    tarifLines.forEach(line => {
        doc.text(line, 20, yPos);
        yPos += 5;
    });

    // Signatures
    yPos += 20;
    doc.text('LE CENTRE DE FORMATION', 50, yPos);
    doc.text('L\'ENTREPRISE', 150, yPos);
    yPos += 5;
    doc.text('(Signature et cachet)', 50, yPos);
    doc.text('(Signature et cachet)', 150, yPos);

    // Footer
    await addImageToPdf(doc, params.footerLogoLeft, 0, pageHeight - 37, pageWidth, 37, params.footerContact);

    return doc.output('blob');
}

// Exposer la fonction principale via window
window.generateConventionPDF = generateConventionPDF;

console.log('‚úÖ [pdfConvention] Module charg√© et expos√© via window.generateConventionPDF');

})();
